//예제 2-8 함수를 정의하는 세 가지 방식
function a() { /* ... */ }     // 함수 선언문. 함수명 a가 곧 변수명.
a();    // 정상실행

var b = function () { /* ... */ }  // (익명) 함수 표현식. 변수명 b가 곧 변수명.
b();    // 정상실행

var c = function d() { /* ... */ } // 기명함수 표현식. 변수명은 c, 함수명은 d.
c();    // 정상실행
d();    // 에러!

/** 기명함수 표현식 주의할 점
 * 외부에서는 함수명으로 함수를 호출할 수 없다. 
 * 함수명은 오직 함수 내부에서만 접근할 수 있다. 
 * 
 * c함수 내부에서는 c()로 호출하든 d()로 호출하든 잘 실행된다. 
 * (함수 내에서 재귀한수를 호출하는 용도로 함수명을 쓸 수 있다. 
 * 하지만 c()로 호출해도 되는 상황에서 굳이?)
 * 
 * - 기명함수의 용도
 * 과거에는 익명함수 표현식은 undefined 또는 unnamed라는 값이 나왔었음. 
 * 기명함수 표현식이 디버깅시 어떤 함수인지를 추적하기에 익명함수 표현식보다 유리한 측면이 있었음.
 * 그러나 이제는 모든 브라우저들이 익명함수 표현식의 변수명을 함수의 name프로퍼티에 할당하고 있다.
 * 
 */