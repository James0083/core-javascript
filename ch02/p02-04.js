// 예제 2-2
console.log("====p2-2====")
function a(x) {     //수집 대상 1(매개변수)
    console.log(x); //(1)
    var x;          //수집 대상 2(변수 선언)
    console.log(x); //(2)
    var x = 2;      //수집 대상 3(변수 선언)
    console.log(x); //(3)
}
a(1)

/** argument에 전달된 인자를 담는 것을 제외하면 함수 b처럼 내부에서 변수를 선언한 것과 다른 점이 없다. 
 *  특히 LexicalEnvironment입장에서는 완전히 같다.
*/

//예제 2-3
console.log("====p2-3====")
function b() {
    var x = 1;      //수집 대상 1(매개변수 선언)
    console.log(x); //(1)
    var x;          //수집 대상 1(변수 선언)
    console.log(x); //(2)
    var x = 2;      //수집 대상 1(변수 선언)
    console.log(x); //(3)
}
b();

/** environmentRecord는 현재 실행될 컨텍스트이 대상 코드 내에 어떤 식별자들이 있는지에만 관심있고, 
 * 각 식별자에 어떤 값이 할당될 것인지에는 관심없다.
 * 따라서 
 */
//예제 2-4 (호이스팅 처리)
function c() {
    var x;      //수집대상 1의 변수 선언 부분 - 변수x를 선언. 메모리에서 저장할 공간을 미리 확보하고, 확보한 공간의 주솟값을 변수 x에 연결함.
    var x;      //수집대상 2의 변수 선언 부분 - 변수x를 다시 선언. 이미 선언된 변수 x가 있기 때문에 무시.
    var x;      //수집대상 3의 변수 선언 부분 - 변수x를 다시 선언. 이미 선언된 변수 x가 있기 때문에 무시.

    x = 1;      //수집대상 1의 할당부분 - x에 1을 할당. 숫자 1을 별도의 메모리에 담고, 
                //          x와 연결된 메모리 공간에 숫자 1을 가리키는 주솟값을 입력.
    console.log(x); //(1)   //x값을 출력
    console.log(x); //(2)   //x값을 출력
    x = 2;      //수집대상 3의 할당부분 - x에 2를 할당. 숫자 2을 별도의 메모리에 담고, 
                //          x와 연결된 메모리 공간에 숫자1의 주솟값을 숫자 2을 가리키는 주솟값으로 대치.
    console.log(x); //(3)   //x값을 출력 -->2
    //실행 컨텍스트가 콜 스택에서 제거됨.
}

